/*
Reverse Proxy as a Service

The presented API definition (formally called as RPaaS v2 API) is a superset of [Tsuru Service API] and the [legacy RPaaS][RPaaS v1 API] (aka RPaaS v1).  Source code: [github.com/tsuru/rpaas-operator](https://github.com/tsuru/rpaas-operator.git)  [Tsuru Service API]: https://app.swaggerhub.com/apis/tsuru/tsuru-service_api [RPaaS v1 API]: https://raw.githubusercontent.com/tsuru/rpaas/master/rpaas/api.py

API version: v2
Contact: tsuru@g.globo
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package autogenerated

import (
	"encoding/json"
)

// checks if the PurgeBulkResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PurgeBulkResponse{}

// PurgeBulkResponse struct for PurgeBulkResponse
type PurgeBulkResponse struct {
	Path            *string `json:"path,omitempty"`
	InstancesPurged *int32  `json:"instances_purged,omitempty"`
	Error           *string `json:"error,omitempty"`
}

// NewPurgeBulkResponse instantiates a new PurgeBulkResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPurgeBulkResponse() *PurgeBulkResponse {
	this := PurgeBulkResponse{}
	return &this
}

// NewPurgeBulkResponseWithDefaults instantiates a new PurgeBulkResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPurgeBulkResponseWithDefaults() *PurgeBulkResponse {
	this := PurgeBulkResponse{}
	return &this
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *PurgeBulkResponse) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurgeBulkResponse) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *PurgeBulkResponse) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *PurgeBulkResponse) SetPath(v string) {
	o.Path = &v
}

// GetInstancesPurged returns the InstancesPurged field value if set, zero value otherwise.
func (o *PurgeBulkResponse) GetInstancesPurged() int32 {
	if o == nil || IsNil(o.InstancesPurged) {
		var ret int32
		return ret
	}
	return *o.InstancesPurged
}

// GetInstancesPurgedOk returns a tuple with the InstancesPurged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurgeBulkResponse) GetInstancesPurgedOk() (*int32, bool) {
	if o == nil || IsNil(o.InstancesPurged) {
		return nil, false
	}
	return o.InstancesPurged, true
}

// HasInstancesPurged returns a boolean if a field has been set.
func (o *PurgeBulkResponse) HasInstancesPurged() bool {
	if o != nil && !IsNil(o.InstancesPurged) {
		return true
	}

	return false
}

// SetInstancesPurged gets a reference to the given int32 and assigns it to the InstancesPurged field.
func (o *PurgeBulkResponse) SetInstancesPurged(v int32) {
	o.InstancesPurged = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *PurgeBulkResponse) GetError() string {
	if o == nil || IsNil(o.Error) {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurgeBulkResponse) GetErrorOk() (*string, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *PurgeBulkResponse) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *PurgeBulkResponse) SetError(v string) {
	o.Error = &v
}

func (o PurgeBulkResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PurgeBulkResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	if !IsNil(o.InstancesPurged) {
		toSerialize["instances_purged"] = o.InstancesPurged
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	return toSerialize, nil
}

type NullablePurgeBulkResponse struct {
	value *PurgeBulkResponse
	isSet bool
}

func (v NullablePurgeBulkResponse) Get() *PurgeBulkResponse {
	return v.value
}

func (v *NullablePurgeBulkResponse) Set(val *PurgeBulkResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePurgeBulkResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePurgeBulkResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePurgeBulkResponse(val *PurgeBulkResponse) *NullablePurgeBulkResponse {
	return &NullablePurgeBulkResponse{value: val, isSet: true}
}

func (v NullablePurgeBulkResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePurgeBulkResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
