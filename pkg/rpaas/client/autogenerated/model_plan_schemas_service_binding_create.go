/*
Reverse Proxy as a Service

The presented API definition (formally called as RPaaS v2 API) is a superset of [Tsuru Service API] and the [legacy RPaaS][RPaaS v1 API] (aka RPaaS v1).  Source code: [github.com/tsuru/rpaas-operator](https://github.com/tsuru/rpaas-operator.git)  [Tsuru Service API]: https://app.swaggerhub.com/apis/tsuru/tsuru-service_api [RPaaS v1 API]: https://raw.githubusercontent.com/tsuru/rpaas/master/rpaas/api.py

API version: v2
Contact: tsuru@g.globo
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package autogenerated

import (
	"encoding/json"
)

// checks if the PlanSchemasServiceBindingCreate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PlanSchemasServiceBindingCreate{}

// PlanSchemasServiceBindingCreate struct for PlanSchemasServiceBindingCreate
type PlanSchemasServiceBindingCreate struct {
	Properties map[string]interface{} `json:"properties,omitempty"`
	Response   map[string]interface{} `json:"response,omitempty"`
}

// NewPlanSchemasServiceBindingCreate instantiates a new PlanSchemasServiceBindingCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlanSchemasServiceBindingCreate() *PlanSchemasServiceBindingCreate {
	this := PlanSchemasServiceBindingCreate{}
	return &this
}

// NewPlanSchemasServiceBindingCreateWithDefaults instantiates a new PlanSchemasServiceBindingCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlanSchemasServiceBindingCreateWithDefaults() *PlanSchemasServiceBindingCreate {
	this := PlanSchemasServiceBindingCreate{}
	return &this
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *PlanSchemasServiceBindingCreate) GetProperties() map[string]interface{} {
	if o == nil || IsNil(o.Properties) {
		var ret map[string]interface{}
		return ret
	}
	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlanSchemasServiceBindingCreate) GetPropertiesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Properties) {
		return map[string]interface{}{}, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *PlanSchemasServiceBindingCreate) HasProperties() bool {
	if o != nil && !IsNil(o.Properties) {
		return true
	}

	return false
}

// SetProperties gets a reference to the given map[string]interface{} and assigns it to the Properties field.
func (o *PlanSchemasServiceBindingCreate) SetProperties(v map[string]interface{}) {
	o.Properties = v
}

// GetResponse returns the Response field value if set, zero value otherwise.
func (o *PlanSchemasServiceBindingCreate) GetResponse() map[string]interface{} {
	if o == nil || IsNil(o.Response) {
		var ret map[string]interface{}
		return ret
	}
	return o.Response
}

// GetResponseOk returns a tuple with the Response field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlanSchemasServiceBindingCreate) GetResponseOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Response) {
		return map[string]interface{}{}, false
	}
	return o.Response, true
}

// HasResponse returns a boolean if a field has been set.
func (o *PlanSchemasServiceBindingCreate) HasResponse() bool {
	if o != nil && !IsNil(o.Response) {
		return true
	}

	return false
}

// SetResponse gets a reference to the given map[string]interface{} and assigns it to the Response field.
func (o *PlanSchemasServiceBindingCreate) SetResponse(v map[string]interface{}) {
	o.Response = v
}

func (o PlanSchemasServiceBindingCreate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PlanSchemasServiceBindingCreate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Properties) {
		toSerialize["properties"] = o.Properties
	}
	if !IsNil(o.Response) {
		toSerialize["response"] = o.Response
	}
	return toSerialize, nil
}

type NullablePlanSchemasServiceBindingCreate struct {
	value *PlanSchemasServiceBindingCreate
	isSet bool
}

func (v NullablePlanSchemasServiceBindingCreate) Get() *PlanSchemasServiceBindingCreate {
	return v.value
}

func (v *NullablePlanSchemasServiceBindingCreate) Set(val *PlanSchemasServiceBindingCreate) {
	v.value = val
	v.isSet = true
}

func (v NullablePlanSchemasServiceBindingCreate) IsSet() bool {
	return v.isSet
}

func (v *NullablePlanSchemasServiceBindingCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlanSchemasServiceBindingCreate(val *PlanSchemasServiceBindingCreate) *NullablePlanSchemasServiceBindingCreate {
	return &NullablePlanSchemasServiceBindingCreate{value: val, isSet: true}
}

func (v NullablePlanSchemasServiceBindingCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlanSchemasServiceBindingCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
