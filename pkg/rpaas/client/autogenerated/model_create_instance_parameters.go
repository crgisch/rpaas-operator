/*
Reverse Proxy as a Service

The presented API definition (formally called as RPaaS v2 API) is a superset of [Tsuru Service API] and the [legacy RPaaS][RPaaS v1 API] (aka RPaaS v1).  Source code: [github.com/tsuru/rpaas-operator](https://github.com/tsuru/rpaas-operator.git)  [Tsuru Service API]: https://app.swaggerhub.com/apis/tsuru/tsuru-service_api [RPaaS v1 API]: https://raw.githubusercontent.com/tsuru/rpaas/master/rpaas/api.py

API version: v2
Contact: tsuru@g.globo
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package autogenerated

import (
	"encoding/json"
)

// checks if the CreateInstanceParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateInstanceParameters{}

// CreateInstanceParameters This object must be encoded like [github.com/ajg/form](https://github.com/ajg/form) does. Example: ``` parameters.flavors=chocolate,milk&parameters.ip=169.254.254.100 ```
type CreateInstanceParameters struct {
	Flavors      *string `json:"flavors,omitempty"`
	Ip           *string `json:"ip,omitempty"`
	PlanOverride *string `json:"plan-override,omitempty"`
	LbName       *string `json:"lb-name,omitempty"`
}

// NewCreateInstanceParameters instantiates a new CreateInstanceParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateInstanceParameters() *CreateInstanceParameters {
	this := CreateInstanceParameters{}
	return &this
}

// NewCreateInstanceParametersWithDefaults instantiates a new CreateInstanceParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateInstanceParametersWithDefaults() *CreateInstanceParameters {
	this := CreateInstanceParameters{}
	return &this
}

// GetFlavors returns the Flavors field value if set, zero value otherwise.
func (o *CreateInstanceParameters) GetFlavors() string {
	if o == nil || IsNil(o.Flavors) {
		var ret string
		return ret
	}
	return *o.Flavors
}

// GetFlavorsOk returns a tuple with the Flavors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInstanceParameters) GetFlavorsOk() (*string, bool) {
	if o == nil || IsNil(o.Flavors) {
		return nil, false
	}
	return o.Flavors, true
}

// HasFlavors returns a boolean if a field has been set.
func (o *CreateInstanceParameters) HasFlavors() bool {
	if o != nil && !IsNil(o.Flavors) {
		return true
	}

	return false
}

// SetFlavors gets a reference to the given string and assigns it to the Flavors field.
func (o *CreateInstanceParameters) SetFlavors(v string) {
	o.Flavors = &v
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *CreateInstanceParameters) GetIp() string {
	if o == nil || IsNil(o.Ip) {
		var ret string
		return ret
	}
	return *o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInstanceParameters) GetIpOk() (*string, bool) {
	if o == nil || IsNil(o.Ip) {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *CreateInstanceParameters) HasIp() bool {
	if o != nil && !IsNil(o.Ip) {
		return true
	}

	return false
}

// SetIp gets a reference to the given string and assigns it to the Ip field.
func (o *CreateInstanceParameters) SetIp(v string) {
	o.Ip = &v
}

// GetPlanOverride returns the PlanOverride field value if set, zero value otherwise.
func (o *CreateInstanceParameters) GetPlanOverride() string {
	if o == nil || IsNil(o.PlanOverride) {
		var ret string
		return ret
	}
	return *o.PlanOverride
}

// GetPlanOverrideOk returns a tuple with the PlanOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInstanceParameters) GetPlanOverrideOk() (*string, bool) {
	if o == nil || IsNil(o.PlanOverride) {
		return nil, false
	}
	return o.PlanOverride, true
}

// HasPlanOverride returns a boolean if a field has been set.
func (o *CreateInstanceParameters) HasPlanOverride() bool {
	if o != nil && !IsNil(o.PlanOverride) {
		return true
	}

	return false
}

// SetPlanOverride gets a reference to the given string and assigns it to the PlanOverride field.
func (o *CreateInstanceParameters) SetPlanOverride(v string) {
	o.PlanOverride = &v
}

// GetLbName returns the LbName field value if set, zero value otherwise.
func (o *CreateInstanceParameters) GetLbName() string {
	if o == nil || IsNil(o.LbName) {
		var ret string
		return ret
	}
	return *o.LbName
}

// GetLbNameOk returns a tuple with the LbName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateInstanceParameters) GetLbNameOk() (*string, bool) {
	if o == nil || IsNil(o.LbName) {
		return nil, false
	}
	return o.LbName, true
}

// HasLbName returns a boolean if a field has been set.
func (o *CreateInstanceParameters) HasLbName() bool {
	if o != nil && !IsNil(o.LbName) {
		return true
	}

	return false
}

// SetLbName gets a reference to the given string and assigns it to the LbName field.
func (o *CreateInstanceParameters) SetLbName(v string) {
	o.LbName = &v
}

func (o CreateInstanceParameters) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateInstanceParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Flavors) {
		toSerialize["flavors"] = o.Flavors
	}
	if !IsNil(o.Ip) {
		toSerialize["ip"] = o.Ip
	}
	if !IsNil(o.PlanOverride) {
		toSerialize["plan-override"] = o.PlanOverride
	}
	if !IsNil(o.LbName) {
		toSerialize["lb-name"] = o.LbName
	}
	return toSerialize, nil
}

type NullableCreateInstanceParameters struct {
	value *CreateInstanceParameters
	isSet bool
}

func (v NullableCreateInstanceParameters) Get() *CreateInstanceParameters {
	return v.value
}

func (v *NullableCreateInstanceParameters) Set(val *CreateInstanceParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateInstanceParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateInstanceParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateInstanceParameters(val *CreateInstanceParameters) *NullableCreateInstanceParameters {
	return &NullableCreateInstanceParameters{value: val, isSet: true}
}

func (v NullableCreateInstanceParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateInstanceParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
