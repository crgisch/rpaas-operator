/*
Reverse Proxy as a Service

The presented API definition (formally called as RPaaS v2 API) is a superset of [Tsuru Service API] and the [legacy RPaaS][RPaaS v1 API] (aka RPaaS v1).  Source code: [github.com/tsuru/rpaas-operator](https://github.com/tsuru/rpaas-operator.git)  [Tsuru Service API]: https://app.swaggerhub.com/apis/tsuru/tsuru-service_api [RPaaS v1 API]: https://raw.githubusercontent.com/tsuru/rpaas/master/rpaas/api.py

API version: v2
Contact: tsuru@g.globo
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package autogenerated

import (
	"encoding/json"
)

// checks if the PlanSchemas type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PlanSchemas{}

// PlanSchemas struct for PlanSchemas
type PlanSchemas struct {
	ServiceInstance *PlanSchemasServiceInstance `json:"service_instance,omitempty"`
	ServiceBinding  *PlanSchemasServiceBinding  `json:"service_binding,omitempty"`
}

// NewPlanSchemas instantiates a new PlanSchemas object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlanSchemas() *PlanSchemas {
	this := PlanSchemas{}
	return &this
}

// NewPlanSchemasWithDefaults instantiates a new PlanSchemas object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlanSchemasWithDefaults() *PlanSchemas {
	this := PlanSchemas{}
	return &this
}

// GetServiceInstance returns the ServiceInstance field value if set, zero value otherwise.
func (o *PlanSchemas) GetServiceInstance() PlanSchemasServiceInstance {
	if o == nil || IsNil(o.ServiceInstance) {
		var ret PlanSchemasServiceInstance
		return ret
	}
	return *o.ServiceInstance
}

// GetServiceInstanceOk returns a tuple with the ServiceInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlanSchemas) GetServiceInstanceOk() (*PlanSchemasServiceInstance, bool) {
	if o == nil || IsNil(o.ServiceInstance) {
		return nil, false
	}
	return o.ServiceInstance, true
}

// HasServiceInstance returns a boolean if a field has been set.
func (o *PlanSchemas) HasServiceInstance() bool {
	if o != nil && !IsNil(o.ServiceInstance) {
		return true
	}

	return false
}

// SetServiceInstance gets a reference to the given PlanSchemasServiceInstance and assigns it to the ServiceInstance field.
func (o *PlanSchemas) SetServiceInstance(v PlanSchemasServiceInstance) {
	o.ServiceInstance = &v
}

// GetServiceBinding returns the ServiceBinding field value if set, zero value otherwise.
func (o *PlanSchemas) GetServiceBinding() PlanSchemasServiceBinding {
	if o == nil || IsNil(o.ServiceBinding) {
		var ret PlanSchemasServiceBinding
		return ret
	}
	return *o.ServiceBinding
}

// GetServiceBindingOk returns a tuple with the ServiceBinding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlanSchemas) GetServiceBindingOk() (*PlanSchemasServiceBinding, bool) {
	if o == nil || IsNil(o.ServiceBinding) {
		return nil, false
	}
	return o.ServiceBinding, true
}

// HasServiceBinding returns a boolean if a field has been set.
func (o *PlanSchemas) HasServiceBinding() bool {
	if o != nil && !IsNil(o.ServiceBinding) {
		return true
	}

	return false
}

// SetServiceBinding gets a reference to the given PlanSchemasServiceBinding and assigns it to the ServiceBinding field.
func (o *PlanSchemas) SetServiceBinding(v PlanSchemasServiceBinding) {
	o.ServiceBinding = &v
}

func (o PlanSchemas) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PlanSchemas) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ServiceInstance) {
		toSerialize["service_instance"] = o.ServiceInstance
	}
	if !IsNil(o.ServiceBinding) {
		toSerialize["service_binding"] = o.ServiceBinding
	}
	return toSerialize, nil
}

type NullablePlanSchemas struct {
	value *PlanSchemas
	isSet bool
}

func (v NullablePlanSchemas) Get() *PlanSchemas {
	return v.value
}

func (v *NullablePlanSchemas) Set(val *PlanSchemas) {
	v.value = val
	v.isSet = true
}

func (v NullablePlanSchemas) IsSet() bool {
	return v.isSet
}

func (v *NullablePlanSchemas) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlanSchemas(val *PlanSchemas) *NullablePlanSchemas {
	return &NullablePlanSchemas{value: val, isSet: true}
}

func (v NullablePlanSchemas) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlanSchemas) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
