/*
Reverse Proxy as a Service

The presented API definition (formally called as RPaaS v2 API) is a superset of [Tsuru Service API] and the [legacy RPaaS][RPaaS v1 API] (aka RPaaS v1).  Source code: [github.com/tsuru/rpaas-operator](https://github.com/tsuru/rpaas-operator.git)  [Tsuru Service API]: https://app.swaggerhub.com/apis/tsuru/tsuru-service_api [RPaaS v1 API]: https://raw.githubusercontent.com/tsuru/rpaas/master/rpaas/api.py

API version: v2
Contact: tsuru@g.globo
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package autogenerated

import (
	"encoding/json"
)

// checks if the PlanSchemasServiceInstanceCreate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PlanSchemasServiceInstanceCreate{}

// PlanSchemasServiceInstanceCreate struct for PlanSchemasServiceInstanceCreate
type PlanSchemasServiceInstanceCreate struct {
	Properties map[string]interface{} `json:"properties,omitempty"`
}

// NewPlanSchemasServiceInstanceCreate instantiates a new PlanSchemasServiceInstanceCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlanSchemasServiceInstanceCreate() *PlanSchemasServiceInstanceCreate {
	this := PlanSchemasServiceInstanceCreate{}
	return &this
}

// NewPlanSchemasServiceInstanceCreateWithDefaults instantiates a new PlanSchemasServiceInstanceCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlanSchemasServiceInstanceCreateWithDefaults() *PlanSchemasServiceInstanceCreate {
	this := PlanSchemasServiceInstanceCreate{}
	return &this
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *PlanSchemasServiceInstanceCreate) GetProperties() map[string]interface{} {
	if o == nil || IsNil(o.Properties) {
		var ret map[string]interface{}
		return ret
	}
	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlanSchemasServiceInstanceCreate) GetPropertiesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Properties) {
		return map[string]interface{}{}, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *PlanSchemasServiceInstanceCreate) HasProperties() bool {
	if o != nil && !IsNil(o.Properties) {
		return true
	}

	return false
}

// SetProperties gets a reference to the given map[string]interface{} and assigns it to the Properties field.
func (o *PlanSchemasServiceInstanceCreate) SetProperties(v map[string]interface{}) {
	o.Properties = v
}

func (o PlanSchemasServiceInstanceCreate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PlanSchemasServiceInstanceCreate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Properties) {
		toSerialize["properties"] = o.Properties
	}
	return toSerialize, nil
}

type NullablePlanSchemasServiceInstanceCreate struct {
	value *PlanSchemasServiceInstanceCreate
	isSet bool
}

func (v NullablePlanSchemasServiceInstanceCreate) Get() *PlanSchemasServiceInstanceCreate {
	return v.value
}

func (v *NullablePlanSchemasServiceInstanceCreate) Set(val *PlanSchemasServiceInstanceCreate) {
	v.value = val
	v.isSet = true
}

func (v NullablePlanSchemasServiceInstanceCreate) IsSet() bool {
	return v.isSet
}

func (v *NullablePlanSchemasServiceInstanceCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlanSchemasServiceInstanceCreate(val *PlanSchemasServiceInstanceCreate) *NullablePlanSchemasServiceInstanceCreate {
	return &NullablePlanSchemasServiceInstanceCreate{value: val, isSet: true}
}

func (v NullablePlanSchemasServiceInstanceCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlanSchemasServiceInstanceCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
